// <auto-generated />
using System;
using System.Collections;
using System.Net;
using LogBasePresenter;
using LogBasePresenter.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LogBasePresenter.Migrations
{
    [DbContext(typeof(LogBaseContext))]
    [Migration("20191223054616_SubnetToBits32")]
    partial class SubnetToBits32
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("LogBasePresenter.DatabaseModels.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("LogBasePresenter.DatabaseModels.LogRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<IPAddress>("Ip")
                        .HasColumnType("inet");

                    b.Property<AQuery>("QueryDescription")
                        .HasColumnType("json");

                    b.Property<DateTime>("RecordTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("LogRecords");
                });

            modelBuilder.Entity("LogBasePresenter.DatabaseModels.Subnet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<BitArray>("Broadcast")
                        .HasColumnType("bit(32)")
                        .HasMaxLength(32);

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<BitArray>("Network")
                        .HasColumnType("bit(32)")
                        .HasMaxLength(32);

                    b.Property<ValueTuple<IPAddress, int>>("SubnetCidr")
                        .HasColumnType("cidr");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Subnet");
                });

            modelBuilder.Entity("LogBasePresenter.DatabaseModels.Subnet", b =>
                {
                    b.HasOne("LogBasePresenter.DatabaseModels.Country", "Country")
                        .WithMany("Subnets")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
